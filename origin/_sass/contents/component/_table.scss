// 表組み
// ==========================================================================
// 主に`<table>`タグに直接付与し、表組みを表示したい場合に使用する。
//


// Roots
.table {
	//付与したHTML要素のデフォルトスタイルをリセット
	thead,tbody,tfoot,tr,th,td {
	}
}



// 【包括】
// ==================================================

// Roots内部要素へのスタイリング
// --------------------------------------------------

.table {

	// 基本設定
	th,td {
		margin: 0;
		padding: 16px 24px;
		border: 1px solid #ccc;
		font-weight: normal;
	}

	// 構造
	thead {
		th,td {
			background-color: #f2f2f2;
		}
		th {
			background-color: #f2f2f2;
			white-space: nowrap;
		}
		td {
		}
	}
	tbody {
		th,td {
		}
		th {
			background-color: #f7f7f7;
			white-space: nowrap;
			text-align: left;
		}
		td {
		}
	}
	tfoot {
		th,td {
		}
		th {
		}
		td {
		}
	}
}


// Rootsへのマルチクラス付与（語句追加複製／状態変化）
// --------------------------------------------------

.table {

// 以下は、tableの形状によってレスポンシブの挙動を制御するためのもの。

	// 縦方向のtable
	// --------------------------------------------------
	// `tbody`のみでも成立るるようなもので、`tr`一つに対し、`th`が一つと`td`の数が1～少数といった形式のtable。
	// データが増える時には縦方向に増えていく。

	&.table-vertical {

	}

	// 横方向のtable
	// --------------------------------------------------
	// `thead`の行に`th`があり、`tbody`の`tr`一つに対し、`td`のみが存在し、列で情報を区切るタイプのtabl。
	// データが増える時には、横方向に増えていく。

	&.table-horizontal {

	}

	// マトリクスのtable
	// --------------------------------------------------
	// 縦横混合の表で、 `thead`に`th`が横に並び、`tbody`には`th`と`td`の両方が存在するタイプのtable。
	// データが増える時には、縦や横に増えていく。

	&.table-matrix {

	}
}




// 【別名複製】 単独利用
// ==================================================
// ※シングルクラス用途のもので、数が増える場合は別途ファイル化する




// 【命名所属化】
// ==================================================
// 以下は、`div`などで役割を代替するときに、該当する役割を識別するためのに付与する
//
.table--thead {}
.table--tbody {}
.table--tfoot {}
.table--trow {}
.table--tcell {}
.table--tcell-th {}
.table--tcell-td {}

